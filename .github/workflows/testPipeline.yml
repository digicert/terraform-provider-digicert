name: Terraform Provider Testing Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  linux-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: üê≥ Set up QEMU for cross-architecture support
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/386

      # - name: üß± Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: üîÑ Checkout Terraform Provider Repository
      #   uses: actions/checkout@v3

      # - name: üöÄ Run Terraform build & tests inside linux/386 container
      #   run: |
      #     docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace i386/debian:bullseye bash -c "
      #       set -e
      #       apt-get update &&
      #       apt-get install -y wget unzip git openjdk-17-jdk maven golang &&
      #       export GOPATH=/workspace/go &&
      #       mkdir -p \$GOPATH &&
      #       export PATH=\$PATH:/workspace &&
      #       export GOARCH=386 &&
      #       export GOOS=linux &&
      #       cd /workspace &&
      #       go version &&
      #       go mod tidy &&
      #       go build -o terraform-provider-digicert &&
      #       mkdir -p \$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386 &&
      #       cp terraform-provider-digicert \$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386 &&
      #       wget https://releases.hashicorp.com/terraform/1.1.4/terraform_1.1.4_linux_386.zip &&
      #       unzip terraform_1.1.4_linux_386.zip &&
      #       mv terraform /usr/local/bin/ &&
      #       terraform version &&
      #       echo '‚úÖ Terraform provider build complete.'

      #       echo 'üîÑ Cloning automation test repo...'
      #       git clone https://github.com/digicert/DigicertTerraformTests.git &&
      #       cd DigicertTerraformTests

      #       echo '‚ñ∂ Running initial Maven test suite...'
      #       mvn clean test -DsuiteXmlFile=testng.xml || (
      #         echo '‚ö† Initial test failed, attempting rerun with failure.xml...' &&
      #         mvn test -DsuiteXmlFile=failure.xml || (
      #           echo '‚ùå Final rerun also failed. Exiting with failure.' &&
      #           exit 1
      #         )
      #       )
      #     "
  # ubuntu-test:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   env:
  #     GOPATH: ${{ github.workspace }}/go
  #   steps:
  #     - name: üîÑ Checkout Terraform Provider Repo
  #       uses: actions/checkout@v3

  #     - name: ‚öôÔ∏è Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'

  #     - name: üßπ Clean Go Module Cache (Optional but helpful)
  #       run: |
  #         go clean -modcache

  #     - name: üì¶ Build Terraform Provider
  #       run: |
  #         go mod tidy
  #         go build -o terraform-provider-digicert

  #     - name: üìÅ Move Plugin to Terraform Plugin Directory
  #       run: |
  #         PLUGIN_DIR="${GOPATH}/bin/digicert.com/terraform/digicert/0.1.0/linux_amd64"
  #         mkdir -p "$PLUGIN_DIR"
  #         cp terraform-provider-digicert "$PLUGIN_DIR/"

  #     - name: üåç Install Terraform (Linux)
  #       run: |
  #         wget https://releases.hashicorp.com/terraform/1.11.4/terraform_1.11.4_linux_amd64.zip
  #         unzip terraform_1.11.4_linux_amd64.zip
  #         sudo mv terraform /usr/local/bin/
  #         terraform version

  #     - name: üîÑ Checkout Automation Repo
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digicert/DigicertTerraformTests
  #         path: DigicertTerraformTests
  #         token: ${{ secrets.QA_TOKEN }}
  #         ref: master

  #     - name: üì§ Copy Provider Binary to Automation Repo Root
  #       run: cp terraform-provider-digicert DigicertTerraformTests/

  #     - name: ‚òï Set up Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: üß™ Run Maven Automation Tests
  #       id: maven-test
  #       working-directory: DigicertTerraformTests
  #       run: |
  #         set +e
  #         mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=testng.xml"
  #         echo "exit_code=$?" >> $GITHUB_OUTPUT
  #         exit 0  # Prevent step from failing the job
    
  #     - name: üß™ Re-Run failed Tests
  #       id: rerun-tests
  #       working-directory: DigicertTerraformTests
  #       if: steps.maven-test.outputs.exit_code != '0'
  #       run: |
  #           set +e
  #           mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
  #           echo "exit_code=$?" >> $GITHUB_OUTPUT
  #           exit 0
        
  #     - name: üß™ Final Retry for persistent failures
  #       working-directory: DigicertTerraformTests
  #       if: steps.rerun-tests.outputs.exit_code != '0'
  #       run: mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
        
  # windows-test:
  #   if: always()
  #   runs-on: windows-latest
  #   continue-on-error: true
  #   env:
  #     GOPATH: ${{ github.workspace }}/go
  #   steps:
  #     - name: üîÑ Checkout Terraform Provider Repo
  #       uses: actions/checkout@v3

  #     - name: ‚öôÔ∏è Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'

  #     - name: üì¶ Build Terraform Provider (Windows)
  #       shell: powershell
  #       run: |
  #         $env:GOOS="windows"
  #         $env:GOARCH="amd64"
  #         $env:CGO_ENABLED="0"
  #         go build -o terraform-provider-digicert.exe

  #     - name: üì• Copy Provider Binary to Terraform plugin path
  #       shell: powershell
  #       run: |
  #         $pluginDir = "$env:APPDATA\terraform.d\plugins\digicert.com\terraform\digicert\1.0.0\windows_amd64"
  #         New-Item -ItemType Directory -Path $pluginDir -Force | Out-Null
  #         Copy-Item -Path "terraform-provider-digicert.exe" -Destination "$pluginDir"

  #     - name: ü™ü Install Terraform
  #       shell: powershell
  #       run: |
  #         $TerraformDir = "$env:USERPROFILE\terraform"
  #         New-Item -ItemType Directory -Path $TerraformDir -Force | Out-Null
  #         Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/1.11.4/terraform_1.11.4_windows_amd64.zip" -OutFile "$TerraformDir\terraform.zip"
  #         Expand-Archive -Path "$TerraformDir\terraform.zip" -DestinationPath $TerraformDir
  #         echo "$TerraformDir" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #         & "$TerraformDir\terraform.exe" version

  #     - name: üîÑ Checkout Automation Repo
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digicert/DigicertTerraformTests
  #         path: DigicertTerraformTests
  #         token: ${{ secrets.QA_TOKEN }}
  #         ref: master

  #     - name: üì§ Copy Provider Binary to Automation Repo Root
  #       shell: powershell
  #       run: Copy-Item terraform-provider-digicert.exe DigicertTerraformTests\

  #     - name: ‚òï Set up Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: üß™ Run Maven Automation Tests
  #       id: maven-test
  #       working-directory: DigicertTerraformTests
  #       shell: powershell
  #       run: |
  #           mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=testng.xml"
  #           $exitCode = $LASTEXITCODE
  #           "exit_code=$exitCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
  #           exit 0  # Always exit 0 to prevent job failure
    
  #     - name: üß™ Re-Run failed Tests
  #       id: rerun-tests
  #       working-directory: DigicertTerraformTests
  #       if: steps.maven-test.outputs.exit_code != '0'
  #       shell: powershell
  #       run: |
  #             mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
  #             $exitCode = $LASTEXITCODE
  #             "exit_code=$exitCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
  #             exit 0
          
  #     - name: üß™ Final Retry for persistent failures
  #       working-directory: DigicertTerraformTests
  #       if: steps.rerun-tests.outputs.exit_code != '0'
  #       shell: powershell
  #       run: mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"

  # macosAmd-test:
  #         runs-on: macos-13
  #         if: always()
  #         continue-on-error: true
  #         env:
  #           GOPATH: ${{ github.workspace }}/go
  #         steps:
  #           - name: üîÑ Checkout Terraform Provider Repo
  #             uses: actions/checkout@v3
      
  #           - name: ‚öôÔ∏è Set up Go
  #             uses: actions/setup-go@v4
  #             with:
  #               go-version: '1.21'
      
  #           - name: üßπ Clean Go Module Cache (Optional but helpful)
  #             run: |
  #               go clean -modcache
      
  #           - name: üì¶ Build Terraform Provider
  #             run: |
  #               go mod tidy
  #               go build -o terraform-provider-digicert
      
  #           - name: üìÅ Move Plugin to Terraform Plugin Directory
  #             run: |
  #               PLUGIN_DIR="${GOPATH}/bin/digicert.com/terraform/digicert/0.1.0/darwin_amd64"
  #               mkdir -p "$PLUGIN_DIR"
  #               cp terraform-provider-digicert "$PLUGIN_DIR/"
      
  #           - name: üåç Install Terraform (macOS)
  #             run: |
  #               curl -LO https://releases.hashicorp.com/terraform/1.11.4/terraform_1.11.4_darwin_amd64.zip
  #               unzip terraform_1.11.4_darwin_amd64.zip
  #               mv terraform /usr/local/bin/
  #               terraform version
      
  #           - name: üîÑ Checkout Automation Repo
  #             uses: actions/checkout@v3
  #             with:
  #               repository: digicert/DigicertTerraformTests
  #               path: DigicertTerraformTests
  #               token: ${{ secrets.QA_TOKEN }}
  #               ref: master
      
  #           - name: üì§ Copy Provider Binary to Automation Repo Root
  #             run: cp terraform-provider-digicert DigicertTerraformTests/
      
  #           - name: ‚òï Set up Java
  #             uses: actions/setup-java@v3
  #             with:
  #               distribution: 'temurin'
  #               java-version: '17'
      
  #           - name: üß™ Run Maven Automation Tests
  #             id: maven-test
  #             working-directory: DigicertTerraformTests
  #             run: |
  #               set +e
  #               mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=testng.xml"
  #               echo "exit_code=$?" >> $GITHUB_OUTPUT
  #               exit 0  # Prevent step from failing the job
          
  #           - name: üß™ Re-Run failed Tests
  #             id: rerun-tests
  #             working-directory: DigicertTerraformTests
  #             if: steps.maven-test.outputs.exit_code != '0'
  #             run: |
  #               set +e
  #               mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
  #               echo "exit_code=$?" >> $GITHUB_OUTPUT
  #               exit 0
      
  #           - name: üß™ Final Retry for persistent failures
  #             working-directory: DigicertTerraformTests
  #             if: steps.rerun-tests.outputs.exit_code != '0'
  #             run: mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
      
  # macosArm-test:
  #         runs-on: macos-latest
  #         if: always()
  #         continue-on-error: true
  #         env:
  #           GOPATH: ${{ github.workspace }}/go
  #         steps:
  #           - name: üîÑ Checkout Terraform Provider Repo
  #             uses: actions/checkout@v3
      
  #           - name: ‚öôÔ∏è Set up Go
  #             uses: actions/setup-go@v4
  #             with:
  #               go-version: '1.21'
      
  #           - name: üßπ Clean Go Module Cache (Optional but helpful)
  #             run: |
  #               go clean -modcache
      
  #           - name: üì¶ Build Terraform Provider
  #             run: |
  #               go mod tidy
  #               go build -o terraform-provider-digicert
      
  #           - name: üìÅ Move Plugin to Terraform Plugin Directory
  #             run: |
  #               PLUGIN_DIR="${GOPATH}/bin/digicert.com/terraform/digicert/0.1.0/darwin_arm64"
  #               mkdir -p "$PLUGIN_DIR"
  #               cp terraform-provider-digicert "$PLUGIN_DIR/"
      
  #           - name: üåç Install Terraform (macOS)
  #             run: |
  #               curl -LO https://releases.hashicorp.com/terraform/1.11.4/terraform_1.11.4_darwin_arm64.zip
  #               unzip terraform_1.11.4_darwin_arm64.zip
  #               mv terraform /usr/local/bin/
  #               terraform version
      
  #           - name: üîÑ Checkout Automation Repo
  #             uses: actions/checkout@v3
  #             with:
  #               repository: digicert/DigicertTerraformTests
  #               path: DigicertTerraformTests
  #               token: ${{ secrets.QA_TOKEN }}
  #               ref: master
      
  #           - name: üì§ Copy Provider Binary to Automation Repo Root
  #             run: cp terraform-provider-digicert DigicertTerraformTests/
      
  #           - name: ‚òï Set up Java
  #             uses: actions/setup-java@v3
  #             with:
  #               distribution: 'temurin'
  #               java-version: '17'
      
  #           - name: üß™ Run Maven Automation Tests
  #             id: maven-test
  #             working-directory: DigicertTerraformTests
  #             run: |
  #               set +e
  #               mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=testng.xml"
  #               echo "exit_code=$?" >> $GITHUB_OUTPUT
  #               exit 0  # Prevent step from failing the job
          
  #           - name: üß™ Re-Run failed Tests
  #             id: rerun-tests
  #             working-directory: DigicertTerraformTests
  #             if: steps.maven-test.outputs.exit_code != '0'
  #             run: |
  #               set +e
  #               mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
  #               echo "exit_code=$?" >> $GITHUB_OUTPUT
  #               exit 0
      
  #           - name: üß™ Final Retry for persistent failures
  #             working-directory: DigicertTerraformTests
  #             if: steps.rerun-tests.outputs.exit_code != '0'
  #             run: mvn clean test "-Dsurefire.forkCount=1" "-Dsurefire.reuseForks=false" "-DsuiteXmlFile=failure.xml"
      
               