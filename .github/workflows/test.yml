name: Terraform Provider Testing Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  ubuntu-test:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: 🐳 Set up QEMU for cross-architecture support
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/386

      - name: 🧱 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔄 Checkout Terraform Provider Repository
        uses: actions/checkout@v3

      - name: 🚀 Run Terraform build & tests inside prebuilt Maven+JDK container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e QA_TOKEN=${{ secrets.QA_TOKEN }} \
            maven:3.6.3-jdk-8 bash -c "$(cat <<'EOF'
              set -e

              echo '📥 Installing additional deps...'
              apt-get update && apt-get install -y wget unzip git curl tar

              echo '📥 Installing Go 1.22.3...'
              curl -LO https://go.dev/dl/go1.22.3.linux-386.tar.gz &&
              tar -C /usr/local -xzf go1.22.3.linux-386.tar.gz &&
              export PATH=/usr/local/go/bin:$PATH &&
              export GOPATH=/workspace/go &&
              mkdir -p "$GOPATH" &&
              export PATH="$PATH:$GOPATH/bin" &&
              export GOARCH=386 &&
              export GOOS=linux &&
              go version

              echo '🛠 Building Terraform provider...'
              cd /workspace &&
              sed -i 's/^go 1\\.22\\.7/go 1.22/' go.mod &&
              go mod tidy &&
              export GOARCH=386 &&
              apt-get install -y file &&
              go build -buildvcs=false -o terraform-provider-digicert &&
              file terraform-provider-digicert &&
              mkdir -p "$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386" &&
              cp terraform-provider-digicert "$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386"
            

              echo '⬇ Installing Terraform 1.1.4...'
              wget https://releases.hashicorp.com/terraform/1.1.4/terraform_1.1.4_linux_386.zip &&
              unzip terraform_1.1.4_linux_386.zip &&
              mv terraform /usr/local/bin/ &&
              terraform version

              echo '🔄 Cloning automation test repo...'
              git clone https://x-access-token:$QA_TOKEN@github.com/digicert/DigicertTerraformTests.git &&
              cd DigicertTerraformTests &&
              git checkout javaVersionFix
              cp /workspace/terraform-provider-digicert /workspace/DigicertTerraformTests/

              echo '▶ Running tests...'
              mvn clean test -DargLine="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED -Daj.weaving.disable=true -Daj.exclude=org.codehaus.groovy" -Dsurefire.forkCount=1 -Dsurefire.reuseForks=false -DsuiteXmlFile=failure.xml || \
              mvn test -DargLine="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED -Daj.weaving.disable=true" -Dsurefire.forkCount=1 -Dsurefire.reuseForks=false -DsuiteXmlFile=failure.xml || \
              (echo '❌ All attempts failed.' && exit 1)

              echo '✅ Tests completed successfully.'
          EOF
            )"
