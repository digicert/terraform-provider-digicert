name: Terraform Provider Testing Pipeline (linux/386)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  linux-386-test:
    runs-on: ubuntu-latest
    name: Run Terraform and Tests on linux/386 via Docker

    steps:
      - name: üê≥ Set up QEMU for cross-architecture support
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/386

      - name: üß± Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîÑ Checkout Terraform Provider Repository
        uses: actions/checkout@v3

      - name: üöÄ Run Terraform build & tests inside linux/386 container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace i386/debian:bullseye bash -c "
            set -e;
            echo 'Updating apt-get...'; 
            apt-get update && \
            echo 'Installing required packages...'; 
            apt-get install -y wget unzip git openjdk-17-jdk golang && \

            echo 'Installing Go 1.22.7 for 386...'; 
            wget https://go.dev/dl/go1.22.7.linux-386.tar.gz && \
            tar -C /usr/local -xzf go1.22.7.linux-386.tar.gz && \
            export PATH=\$PATH:/usr/local/go/bin && \
            go version && \

            echo 'Installing Apache Maven 3.9.6...'; 
            wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz && \
            tar xzvf apache-maven-3.9.6-bin.tar.gz && \
            export MAVEN_HOME=\$PWD/apache-maven-3.9.6 && \
            export PATH=\$MAVEN_HOME/bin:\$PATH && \
            mvn -v && \

            export GOPATH=/workspace/go && \
            mkdir -p \$GOPATH && \
            export GOARCH=386 && \
            export GOOS=linux && \

            echo 'Running go mod tidy and building Terraform provider...'; 
            go mod tidy && \
            go build -o terraform-provider-digicert && \
            mkdir -p \$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386 && \
            cp terraform-provider-digicert \$GOPATH/bin/digicert.com/terraform/digicert/0.1.0/linux_386 && \

            echo 'Installing Terraform 1.1.4 for linux/386...'; 
            wget https://releases.hashicorp.com/terraform/1.1.4/terraform_1.1.4_linux_386.zip && \
            unzip terraform_1.1.4_linux_386.zip && \
            mv terraform /usr/local/bin/ && \
            terraform version && \
            echo '‚úÖ Terraform provider build complete.'; \

            echo 'üîÑ Cloning automation test repo...'; \
            git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/digicert/DigicertTerraformTests.git && \
            cd DigicertTerraformTests; \

            echo '‚ñ∂ Running initial Maven test suite...'; \
            if ! mvn clean test -DsuiteXmlFile=testng.xml; then \
              echo '‚ö† Initial test failed, attempting rerun with failure.xml...'; \
              if ! mvn test -DsuiteXmlFile=failure.xml; then \
                echo '‚ùå Final rerun also failed. Exiting with failure.'; \
                exit 1; \
              fi; \
            fi;
          "
